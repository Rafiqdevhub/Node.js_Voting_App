# Default docker-compose.yml points to development environment
# Use: docker-compose up --build
# For production: docker-compose -f docker-compose.prod.yml up --build

services:
  # MongoDB Database Service (Development)
  mongodb:
    image: mongo:7.0-jammy
    container_name: voting-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: voting_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - voting-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Mongo Express - MongoDB Admin Interface (Development)
  mongo-express:
    image: mongo-express:latest
    container_name: voting-mongo-express-dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
      ME_CONFIG_MONGODB_SERVER: mongodb
    networks:
      - voting-network
    depends_on:
      mongodb:
        condition: service_healthy

  # Voting Application Service
  voting-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: voting-app-dev
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      DATABASE_URL: mongodb://admin:password123@mongodb:27017/voting_db?authSource=admin
      JWT_SECRET: dev-jwt-secret-key-not-for-production
      JWT_EXPIRY: 30000
      PORT: 5000
      DEBUG: voting-app:*
      LOG_LEVEL: debug
    volumes:
      # Mount source code for development (hot reload)
      - ./src:/app/src:ro
      # Mount package.json for dependency changes
      - ./package.json:/app/package.json:ro
    networks:
      - voting-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    command: ["dumb-init", "--", "npm", "run", "dev"]

volumes:
  mongodb_data:
    driver: local
    name: voting-mongodb-dev-data

networks:
  voting-network:
    driver: bridge
    name: voting-network-dev
